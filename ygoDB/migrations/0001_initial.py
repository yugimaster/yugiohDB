# -*- coding: utf-8 -*-
# Generated by Django 1.9.13 on 2017-05-18 03:29
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CardId',
            fields=[
                ('card_id', models.CharField(max_length=30, primary_key=True, serialize=False, verbose_name='id')),
            ],
            options={
                'db_table': 'card_id',
            },
        ),
        migrations.CreateModel(
            name='CardStatus',
            fields=[
                ('name', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='name')),
                ('phonetic', models.CharField(max_length=255, verbose_name='phonetic')),
                ('type', models.CharField(choices=[('通常', '通常'), ('効果', '効果'), ('特殊召喚', '特殊召喚'), ('特殊召喚/トゥーン', '特殊召喚/トゥーン'), ('特殊召喚/チューナー', '特殊召喚/チューナー'), ('特殊召喚/P/効果', '特殊召喚/P/効果'), ('リバース', 'リバース'), ('リバース/チューナー', 'リバース/チューナー'), ('ユニオン', 'ユニオン'), ('ユニオン/チューナー', 'ユニオン/チューナー'), ('スピリット', 'スピリット'), ('トゥーン', 'トゥーン'), ('デュアル', 'デュアル'), ('チューナー/通常', 'チューナー/通常'), ('チューナー/効果', 'チューナー/効果'), ('儀式', '儀式'), ('儀式/効果', '儀式/効果'), ('儀式/スピリット', '儀式/スピリット'), ('P', 'P'), ('P/効果', 'P/効果'), ('P/リバース', 'P/リバース'), ('P/チューナー', 'P/チューナー'), ('融合', '融合'), ('融合/チューナー', '融合/チューナー'), ('融合/P/効果', '融合/P/効果'), ('S', 'S'), ('S/効果', 'S/効果'), ('S/チューナー', 'S/チューナー'), ('S/P/効果', 'S/P/効果'), ('X', 'X'), ('X/効果', 'X/効果'), ('X/P/効果', 'X/P/効果'), ('L', 'L'), ('L/効果', 'L/効果'), ('通常魔法', '通常魔法'), ('装備魔法', '装備魔法'), ('永続魔法', '永続魔法'), ('速攻魔法', '速攻魔法'), ('儀式魔法', '儀式魔法'), ('フィールド魔法', 'フィールド魔法'), ('通常罠', '通常罠'), ('永続罠', '永続罠'), ('カウンター罠', 'カウンター罠')], default=1, max_length=5, verbose_name='type')),
                ('lv', models.IntegerField(blank=True, choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)], null=True, verbose_name='lv')),
                ('attribute', models.CharField(blank=True, choices=[('闇', '闇'), ('光', '光'), ('水', '水'), ('炎', '炎'), ('地', '地'), ('風', '風'), ('神', '神')], max_length=5, null=True, verbose_name='attribute')),
                ('race', models.CharField(blank=True, choices=[('ドラゴン族', 'ドラゴン'), ('魔法使い族', '魔法使い'), ('アンデット族', 'アンデット'), ('戦士族', '戦士'), ('獣戦士族', '獣戦士'), ('獣族', '獣'), ('鳥獣族', '鳥獣'), ('悪魔族', '悪魔'), ('天使族', '天使'), ('昆虫族', '昆虫'), ('恐竜族', '恐竜'), ('爬虫類族', '爬虫類'), ('魚族', '魚'), ('海竜族', '海竜'), ('機械族', '機械'), ('雷族', '雷'), ('水族', '水'), ('炎族', '炎'), ('岩石族', '岩石'), ('植物族', '植物'), ('サイキック族', 'サイキック'), ('幻竜族', '幻竜'), ('サイバース族', 'サイバース'), ('幻神獣族', '幻神獣'), ('創造神族', '創造神')], max_length=10, null=True, verbose_name='race')),
                ('attack', models.IntegerField(blank=True, null=True, verbose_name='atk')),
                ('defence', models.IntegerField(blank=True, null=True, verbose_name='def')),
                ('material', models.CharField(blank=True, max_length=100, null=True, verbose_name='material')),
                ('effect', models.TextField(blank=True, null=True, verbose_name='effect')),
            ],
            options={
                'db_table': 'card_status',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_name', models.CharField(max_length=255, verbose_name='location_name')),
            ],
            options={
                'db_table': 'Location_list',
            },
        ),
        migrations.CreateModel(
            name='Possession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(verbose_name='number')),
                ('card_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='possession', to='ygoDB.CardId')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='location', to='ygoDB.Location')),
            ],
            options={
                'db_table': 'possession',
            },
        ),
        migrations.AddField(
            model_name='cardid',
            name='name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ygoDB.CardStatus'),
        ),
    ]
